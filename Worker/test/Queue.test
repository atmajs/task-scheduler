include
	.js('../../Queue/index.js::Queue')
	.done(function(resp){
		
		var Queue = resp.Queue;
		UTest({
			$before: function(done){
				UTest.cfg({
					timeout: 8000
				});
				
				var http = require('http'),
					server = http.createServer(function(){}),
					config = {
						port: 5889
					}
					;
					
				server.listen(config.port);
				Queue.Socket.listen(server);
				Worker
					.Worker
					.connect(config)
					.always(done)
					;
			},
			'clear-db': function(done){
								
				Class.MongoStore.settings({
					db: 'test-task-scheduler-queue'
				});
				
				
				Class
					.MongoStore
					.resolveDb()
					.done( (db) => db.dropDatabase(done) );
			},
			
			'schedule (once)': function(done){
				
				Queue.TaskFactory.ensureTask({
					name: 'test',
					trigger: 'in 300ms',
					exec: {
						script: 'global.QTest = "foo-test"'
					}
				});
				
				setTimeout(function(){
					eq_(global.QTest, 'foo-test');
					done();
				}, 600)
			},
			
			'repeat many (rrule)': function(done){
				global.Many = [];
				
				Queue.TaskFactory.ensureTask({
					name: 'test',
					trigger: 'FREQ=SECONDLY;COUNT=5',
					exec: {
						script: 'global.Many.push(new Date)'
					}
				});
				
				setTimeout(function(){
					eq_(global.Many.length, 5);
					done();
				}, 6000)
			}
		})
	});